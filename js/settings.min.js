var Settings = function (a, b, c, d) {
    this.allowModalBGClick = a;
    this.allowAccordionClick = b;
    this.rememberIndex = c;
    this.showDebug = d;
  },
  settingsStr = "settings",
  settings = getSettings();
function getSettings() {
  var a = new Settings(!1, !1, !1, !1);
  null != localStorage.getItem(settingsStr) &&
    (a = JSON.parse(localStorage.getItem(settingsStr)));
  return a;
}
function changeSettings(a) {
  "input" == a.tagName.toLowerCase() && "checkbox" == a.type.toLowerCase()
    ? (settings[a.dataset.setting] = a.checked)
    : (settings[a.dataset.setting] = a.value);
}
function saveSettings(a) {
  localStorage.setItem(settingsStr, JSON.stringify(settings));
  settingsToScreen();
  a && showMsg("success", "<p>Settings saved!</p>");
}
function screenToSettings() {
  document.querySelectorAll("*").forEach(function (a) {
    a.dataset.settings &&
      ("input" == a.tagName.toLowerCase() && "checkbox" == a.type.toLowerCase()
        ? (settings[a.dataset.setting] = a.checked)
        : (settings[a.dataset.setting] = a.value));
  });
  saveSettings(!0);
}
function settingsToScreen() {
  document.querySelectorAll("*").forEach(function (a) {
    a.dataset.settings &&
      ("input" == a.tagName.toLowerCase() && "checkbox" == a.type.toLowerCase()
        ? (a.checked = settings[a.dataset.setting])
        : (a.value = settings[a.dataset.setting]));
  });
  document.getElementById("lbl-settings").value = JSON.stringify(
    settings,
    null,
    2
  );
  document.getElementById("btn-tab-debug").style.display = settings.showDebug
    ? "block"
    : "none";
}
function clearSettings() {
  localStorage.removeItem(settingsStr);
  settings = getSettings();
  saveSettings(!1);
}
function exportSettings() {
  exportObj(settings, "Snips-Settings.bak");
  showMsg("success", "<p>Settings exported to downloads folder</p>");
}
function onloadImportSettings(a) {
  settings = JSON.parse(a) || "{}";
  saveSettings(!0);
}
function importSettings(a) {
  importObj(a, onloadImportSettings, !1);
}
function saveSettingsFromText() {
  var a = document.getElementById("lbl-settings").value;
  onloadImportSettings(a);
}
