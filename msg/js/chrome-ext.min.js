var $jscomp = {
  scope: {},
  checkStringArgs: function (a, c, b) {
    if (null == a)
      throw new TypeError(
        "The 'this' value for String.prototype." +
          b +
          " must not be null or undefined"
      );
    if (c instanceof RegExp)
      throw new TypeError(
        "First argument to String.prototype." +
          b +
          " must not be a regular expression"
      );
    return a + "";
  },
};
$jscomp.defineProperty =
  "function" == typeof Object.defineProperties
    ? Object.defineProperty
    : function (a, c, b) {
        if (b.get || b.set)
          throw new TypeError("ES3 does not support getters and setters.");
        a != Array.prototype && a != Object.prototype && (a[c] = b.value);
      };
$jscomp.getGlobal = function (a) {
  return "undefined" != typeof window && window === a
    ? a
    : "undefined" != typeof global && null != global
    ? global
    : a;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.polyfill = function (a, c, b, d) {
  if (c) {
    b = $jscomp.global;
    a = a.split(".");
    for (d = 0; d < a.length - 1; d++) {
      var e = a[d];
      e in b || (b[e] = {});
      b = b[e];
    }
    a = a[a.length - 1];
    d = b[a];
    c = c(d);
    c != d &&
      null != c &&
      $jscomp.defineProperty(b, a, {
        configurable: !0,
        writable: !0,
        value: c,
      });
  }
};
$jscomp.polyfill(
  "String.prototype.includes",
  function (a) {
    return a
      ? a
      : function (a, b) {
          return (
            -1 !==
            $jscomp.checkStringArgs(this, a, "includes").indexOf(a, b || 0)
          );
        };
  },
  "es6-impl",
  "es3"
);
function isExtension() {
  return window.location.href.includes("chrome-extension://");
}
